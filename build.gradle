buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
        maven {
            name 'Sponge API repo'
            url 'https://repo.spongepowered.org/maven'
        }
        maven {
            name = 'forge'
            url = 'https://maven.minecraftforge.net/'
        }
        maven {
            name = 'oss-sonatype-public'
            url = 'https://oss.sonatype.org/content/repositories/public/'
        }
        maven {
            url = 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
        classpath 'com.anatawa12.forge:ForgeGradle:2.3-1.0.8'
        classpath 'gradle.plugin.nl.javadude.gradle.plugins:license-gradle-plugin:0.14.0'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'com.github.hierynomus.license'

version = project.version
group = "drzhark.mocreatures"
archivesBaseName = jarName

defaultTasks 'clean', 'licenseFormat', 'build'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

minecraft {
    version = "${project.forgeVersion}"
    runDir = "run"
    mappings = project.mcpMappings
    useDepAts = true
    makeObfSourceJar = false
}

deobfMcMCP { failOnAtError = false }
deobfMcSRG { failOnAtError = false }

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        // location of the maven that hosts JEI files
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven"
    }
    maven {
        // location of a maven mirror for JEI files, as a fallback
        name = "ModMaven"
        url = "https://modmaven.dev"
    }
    maven {
        // CurseForge
        name = "Curse Maven"
        url = "https://www.cursemaven.com"
    }
}

dependencies {
    deobfCompile "curse.maven:cofh-core-69162:2920433"
    deobfCompile "curse.maven:future-mc-310059:3924863"
    deobfCompile "curse.maven:thaumcraft-223628:2629023"
    deobfCompile "curse.maven:thermal-expansion-69163:2926431"
    deobfCompile "curse.maven:thermal-foundation-222880:2926428"
    implementation "curse.maven:industrial-foregoing-266515:2745324"
    implementation "curse.maven:just-enough-resources-jer-240630:4440936"
    implementation "curse.maven:morph-229080:2995522"
    implementation "curse.maven:pams-harvestcraft-221857:2904825"
    runtimeOnly "curse.maven:baubles-227083:2518667"
    runtimeOnly "curse.maven:codechicken-lib-1-8-242818:2779848"
    runtimeOnly "curse.maven:cofh-world-271384:2920434"
    runtimeOnly "curse.maven:ichunutil-229060:2801262"
    deobfCompile "curse.maven:jei-238222:4538010"
    runtimeOnly "curse.maven:redstone-flux-270789:2920436"
    runtimeOnly "curse.maven:shadowfacts-forgelin-248453:2785465"
    runtimeOnly "curse.maven:tesla-core-lib-254602:3438487"
}

compileJava {
    options.compilerArgs += ['-Xlint:-processing',]
    options.deprecation = true
    options.encoding = 'utf8'
}

license {
    ext.name = project.name
    ext.organization = project.organization
    ext.url = project.url
    header rootProject.file('License.txt')
    ignoreFailures true
    strictCheck true
    include '**/*.java'
    mapping {
        java = 'SLASHSTAR_STYLE'
    }
}

sourceSets.main {
    java.srcDirs "src/main/generated"
    resources.srcDirs "src/resources"
}

jar {
    manifest {
        attributes('Built-By': System.properties['user.name'],
                'Created-By': System.properties['java.vm.version'] + ' (' + System.properties['java.vm.vendor'] + ')',
                'Implementation-Title': project.name,
                'Implementation-Version': version,
                'Implementation-Vendor': url,
                'FMLAT': "mocreatures_at.cfg")
    }
}

if (JavaVersion.current().isJava8Compatible() || JavaVersion.current().isJava9Compatible()) {
    tasks.withType(Javadoc) {
        // disable the crazy super-strict doclint tool in Java 8
        options.addStringOption('Xdoclint:none', '-quiet')
    }
}

compileJava {
    options.compilerArgs += ['-Xlint:-processing',]
    options.deprecation = true
    options.encoding = 'utf8'
}

idea {
    module {
        inheritOutputDirs = true
    }
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
